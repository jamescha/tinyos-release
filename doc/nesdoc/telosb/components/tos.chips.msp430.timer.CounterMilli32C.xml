<?xml version="1.0" ?><component loc="41:/home/doctor/tinyos-release/tos/chips/msp430/timer/CounterMilli32C.nc" nicename="tos.chips.msp430.timer.CounterMilli32C" qname="CounterMilli32C">
      <documentation loc="33:/home/doctor/tinyos-release/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>
 CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>
 CounterMilli32C provides at 32-bit counter at 1024 ticks per second.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
 @see  Please refer to TEP 102 for more information about this component and its
          intended use.
</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="50:/home/doctor/tinyos-release/tos/chips/msp430/timer/CounterMilli32C.nc">
          <from><interface-ref name="Counter" ref="0x2aaaac8ddbd0" scoped=""/></from>
          <to><interface-ref name="Counter" ref="0x2aaaac9313f8" scoped=""/></to>
        </wire>
        <wire loc="52:/home/doctor/tinyos-release/tos/chips/msp430/timer/CounterMilli32C.nc">
          <from><interface-ref name="CounterFrom" ref="0x2aaaac92e688" scoped=""/></from>
          <to><interface-ref name="Msp430Counter32khz" ref="0x2aaaabde0420" scoped=""/></to>
        </wire>
      </wiring>
    <specification><interface loc="43:/home/doctor/tinyos-release/tos/chips/msp430/timer/CounterMilli32C.nc" name="Counter" provided="1" ref="0x2aaaac8ddbd0">
      <component-ref nicename="tos.chips.msp430.timer.CounterMilli32C" qname="CounterMilli32C"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Counter" ref="0x2aaaac8ddbd0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x2aaaab92e560"/>
            <typename><typedef-ref name="TMilli" ref="0x2aaaab92ecb8"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x2aaaaab75020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x2aaaac936948" scoped=""/>
        <function-ref name="clearOverflow" ref="0x2aaaac9342b0" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x2aaaac936dd0" scoped=""/>
        <function-ref name="overflow" ref="0x2aaaac934738" scoped=""/>
      </interface-functions>
    </interface></specification><referenced><interface loc="62:/home/doctor/tinyos-release/tos/lib/timer/TransformCounterC.nc" name="Counter" provided="1" ref="0x2aaaac9313f8">
      <component-ref nicename="tos.lib.timer.TransformCounterC" qname="CounterMilli32C.Transform"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Counter" ref="0x2aaaac9313f8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x2aaaab92e560"/>
            <typename><typedef-ref name="TMilli" ref="0x2aaaab92ecb8"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x2aaaaab75020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x2aaaac92f190" scoped=""/>
        <function-ref name="clearOverflow" ref="0x2aaaac92faa0" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x2aaaac92f618" scoped=""/>
        <function-ref name="overflow" ref="0x2aaaac92e020" scoped=""/>
      </interface-functions>
    </interface><interface loc="63:/home/doctor/tinyos-release/tos/lib/timer/TransformCounterC.nc" name="CounterFrom" provided="0" ref="0x2aaaac92e688">
      <component-ref nicename="tos.lib.timer.TransformCounterC" qname="CounterMilli32C.Transform"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="CounterFrom" ref="0x2aaaac92e688" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x2aaaab92c0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aaaab92c450"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x2aaaaab74b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x2aaaac92d400" scoped=""/>
        <function-ref name="clearOverflow" ref="0x2aaaac92dd10" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x2aaaac92d888" scoped=""/>
        <function-ref name="overflow" ref="0x2aaaac92b1f8" scoped=""/>
      </interface-functions>
    </interface><interface loc="43:/home/doctor/tinyos-release/tos/chips/msp430/timer/Msp430Counter32khzC.nc" name="Msp430Counter32khz" provided="1" ref="0x2aaaabde0420">
      <component-ref nicename="tos.chips.msp430.timer.Msp430Counter32khzC" qname="Msp430Counter32khzC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Msp430Counter32khz" ref="0x2aaaabde0420" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x2aaaab92c0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aaaab92c450"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x2aaaaab74b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x2aaaabddf1d0" scoped=""/>
        <function-ref name="clearOverflow" ref="0x2aaaabddfae0" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x2aaaabddf658" scoped=""/>
        <function-ref name="overflow" ref="0x2aaaabdde020" scoped=""/>
      </interface-functions>
    </interface><component loc="54(CounterMilli32C.Transform):/home/doctor/tinyos-release/tos/lib/timer/TransformCounterC.nc" nicename="tos.lib.timer.TransformCounterC" qname="CounterMilli32C.Transform">
      <documentation loc="34:/home/doctor/tinyos-release/tos/lib/timer/TransformCounterC.nc">
        <short>
 TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>
 TransformCounterC decreases precision and/or widens an Counter.

 &lt;p&gt;See TEP102 for more details.

 @param to_precision_tag A type indicating the precision of the transformed
   Counter.
 @param to_size_type The type for the width of the transformed Counter.
 @param from_precision_tag A type indicating the precision of the original
   Counter.
 @param from_size_type The type for the width of the original Counter.
 @param bit_shift_right Original time units will be 2 to the power 
   &lt;code&gt;bit_shift_right&lt;/code&gt; larger than transformed time units.
 @param upper_count_type A type large enough to store the upper bits --
   those needed above from_size_type after its shift right to fill
   to_size_type.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
</long>
      </documentation>
      <instance number="1">
        <component-ref nicename="tos.lib.timer.TransformCounterC" qname="TransformCounterC"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x2aaaab92e560"/>
            <typename><typedef-ref name="TMilli" ref="0x2aaaab92ecb8"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x2aaaaab75020"/></typename>
          </type-int>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x2aaaab92c0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aaaab92c450"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x2aaaaab74b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int alignment="I:2" cname="int" size="I:2"/>
          </value>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x2aaaaab75020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component><component loc="41:/home/doctor/tinyos-release/tos/chips/msp430/timer/Msp430Counter32khzC.nc" nicename="tos.chips.msp430.timer.Msp430Counter32khzC" qname="Msp430Counter32khzC">
      <documentation loc="33:/home/doctor/tinyos-release/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>
 Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>
 Msp430Counter32khC provides the standard 32khz counter for the MSP430.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
 @see  Please refer to TEP 102 for more information about this component and its
          intended use.
</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="50:/home/doctor/tinyos-release/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
          <from><interface-ref name="Msp430Counter32khz" ref="0x2aaaabde0420" scoped=""/></from>
          <to><interface-ref name="Counter" ref="0x2aaaabddc980" scoped=""/></to>
        </wire>
        <wire loc="51:/home/doctor/tinyos-release/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
          <from><interface-ref name="Msp430Timer" ref="0x2aaaabdce928" scoped=""/></from>
          <to><interface-ref name="TimerB" ref="0x2aaaaba4e520" scoped=""/></to>
        </wire>
      </wiring>
    </component></referenced></component>